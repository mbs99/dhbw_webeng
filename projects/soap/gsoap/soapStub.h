/* soapStub.h
   Generated by gSOAP 2.8.108 for country.h

gSOAP XML Web services tools
Copyright (C) 2000-2020, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#define SOAP_NAMESPACE_OF_ns1	"http://www.baeldung.com/springsoap/gen"

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 208108
# error "GSOAP VERSION 208108 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumeration Types                                                          *
 *                                                                            *
\******************************************************************************/


/* country.h:155 */
#ifndef SOAP_TYPE_ns1__currency
#define SOAP_TYPE_ns1__currency (7)
/* ns1:currency */
enum ns1__currency {
	ns1__currency__GBP = 0,
	ns1__currency__EUR = 1,
	ns1__currency__PLN = 2
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Structs and Unions                                                         *
 *                                                                            *
\******************************************************************************/

struct ns1__country;	/* country.h:179 */
struct _ns1__getCountryRequest;	/* country.h:201 */
struct _ns1__getCountryResponse;	/* country.h:217 */
struct __ns1__getCountry;	/* country.h:347 */

/* country.h:179 */
#ifndef SOAP_TYPE_ns1__country
#define SOAP_TYPE_ns1__country (8)
/* complex XML schema type 'ns1:country': */
struct ns1__country {
        /** Required element 'ns1:name' of XML schema type 'xsd:string' */
        char *name;
        /** Required element 'ns1:population' of XML schema type 'xsd:int' */
        int population;
        /** Required element 'ns1:capital' of XML schema type 'xsd:string' */
        char *capital;
        /** Required element 'ns1:currency' of XML schema type 'ns1:currency' */
        enum ns1__currency currency;
};
#endif

/* country.h:201 */
#ifndef SOAP_TYPE__ns1__getCountryRequest
#define SOAP_TYPE__ns1__getCountryRequest (9)
/* complex XML schema type 'ns1:getCountryRequest': */
struct _ns1__getCountryRequest {
        /** Required element 'ns1:name' of XML schema type 'xsd:string' */
        char *name;
};
#endif

/* country.h:217 */
#ifndef SOAP_TYPE__ns1__getCountryResponse
#define SOAP_TYPE__ns1__getCountryResponse (10)
/* complex XML schema type 'ns1:getCountryResponse': */
struct _ns1__getCountryResponse {
        /** Required element 'ns1:country' of XML schema type 'ns1:country' */
        struct ns1__country *country;
};
#endif

/* country.h:347 */
#ifndef SOAP_TYPE___ns1__getCountry
#define SOAP_TYPE___ns1__getCountry (15)
/* Wrapper: */
struct __ns1__getCountry {
        /** Optional element 'ns1:getCountryRequest' of XML schema type 'ns1:getCountryRequest' */
        struct _ns1__getCountryRequest *ns1__getCountryRequest;
};
#endif

/* country.h:438 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (16)
/* SOAP_ENV__Header: */
struct SOAP_ENV__Header {
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* empty struct is a GNU extension */
#endif
};
#endif
#endif

/* country.h:438 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (17)
/* Type SOAP_ENV__Code is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* SOAP_ENV__Code: */
struct SOAP_ENV__Code {
        /** Optional element 'SOAP-ENV:Value' of XML schema type 'xsd:QName' */
        char *SOAP_ENV__Value;
        /** Optional element 'SOAP-ENV:Subcode' of XML schema type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Subcode;
};
#endif
#endif

/* country.h:438 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (19)
/* SOAP_ENV__Detail: */
struct SOAP_ENV__Detail {
        char *__any;
        /** Any type of element 'fault' assigned to fault with its SOAP_TYPE_<typename> assigned to __type */
        /** Do not create a cyclic data structure through this member unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
        int __type;
        void *fault;
};
#endif
#endif

/* country.h:438 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (22)
/* SOAP_ENV__Reason: */
struct SOAP_ENV__Reason {
        /** Optional element 'SOAP-ENV:Text' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Text;
};
#endif
#endif

/* country.h:438 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (23)
/* SOAP_ENV__Fault: */
struct SOAP_ENV__Fault {
        /** Optional element 'faultcode' of XML schema type 'xsd:QName' */
        char *faultcode;
        /** Optional element 'faultstring' of XML schema type 'xsd:string' */
        char *faultstring;
        /** Optional element 'faultactor' of XML schema type 'xsd:string' */
        char *faultactor;
        /** Optional element 'detail' of XML schema type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *detail;
        /** Optional element 'SOAP-ENV:Code' of XML schema type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Code;
        /** Optional element 'SOAP-ENV:Reason' of XML schema type 'SOAP-ENV:Reason' */
        struct SOAP_ENV__Reason *SOAP_ENV__Reason;
        /** Optional element 'SOAP-ENV:Node' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Node;
        /** Optional element 'SOAP-ENV:Role' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Role;
        /** Optional element 'SOAP-ENV:Detail' of XML schema type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *SOAP_ENV__Detail;
};
#endif
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* (built-in):0 */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (5)
typedef char *_XML;
#endif

/* (built-in):0 */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (6)
typedef char *_QName;
#endif

/******************************************************************************\
 *                                                                            *
 * Serializable Types                                                         *
 *                                                                            *
\******************************************************************************/


/* char has binding name 'byte' for type 'xsd:byte' */
#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif

/* int has binding name 'int' for type 'xsd:int' */
#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif

/* enum ns1__currency has binding name 'ns1__currency' for type 'ns1:currency' */
#ifndef SOAP_TYPE_ns1__currency
#define SOAP_TYPE_ns1__currency (7)
#endif

/* struct SOAP_ENV__Fault has binding name 'SOAP_ENV__Fault' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (23)
#endif

/* struct SOAP_ENV__Reason has binding name 'SOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (22)
#endif

/* struct SOAP_ENV__Detail has binding name 'SOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (19)
#endif

/* struct SOAP_ENV__Code has binding name 'SOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (17)
#endif

/* struct SOAP_ENV__Header has binding name 'SOAP_ENV__Header' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (16)
#endif

/* struct _ns1__getCountryResponse has binding name '_ns1__getCountryResponse' for type '' */
#ifndef SOAP_TYPE__ns1__getCountryResponse
#define SOAP_TYPE__ns1__getCountryResponse (10)
#endif

/* struct _ns1__getCountryRequest has binding name '_ns1__getCountryRequest' for type '' */
#ifndef SOAP_TYPE__ns1__getCountryRequest
#define SOAP_TYPE__ns1__getCountryRequest (9)
#endif

/* struct ns1__country has binding name 'ns1__country' for type 'ns1:country' */
#ifndef SOAP_TYPE_ns1__country
#define SOAP_TYPE_ns1__country (8)
#endif

/* struct SOAP_ENV__Reason * has binding name 'PointerToSOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (25)
#endif

/* struct SOAP_ENV__Detail * has binding name 'PointerToSOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (24)
#endif

/* struct SOAP_ENV__Code * has binding name 'PointerToSOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (18)
#endif

/* struct _ns1__getCountryResponse * has binding name 'PointerTo_ns1__getCountryResponse' for type '' */
#ifndef SOAP_TYPE_PointerTo_ns1__getCountryResponse
#define SOAP_TYPE_PointerTo_ns1__getCountryResponse (13)
#endif

/* struct _ns1__getCountryRequest * has binding name 'PointerTo_ns1__getCountryRequest' for type '' */
#ifndef SOAP_TYPE_PointerTo_ns1__getCountryRequest
#define SOAP_TYPE_PointerTo_ns1__getCountryRequest (12)
#endif

/* struct ns1__country * has binding name 'PointerTons1__country' for type 'ns1:country' */
#ifndef SOAP_TYPE_PointerTons1__country
#define SOAP_TYPE_PointerTons1__country (11)
#endif

/* _QName has binding name '_QName' for type 'xsd:QName' */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (6)
#endif

/* _XML has binding name '_XML' for type '' */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (5)
#endif

/* char * has binding name 'string' for type 'xsd:string' */
#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stub Functions                                            *
 *                                                                            *
\******************************************************************************/

    
    /** Web service synchronous operation 'soap_call___ns1__getCountry' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getCountry(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__getCountryRequest *ns1__getCountryRequest, struct _ns1__getCountryResponse *ns1__getCountryResponse);
    /** Web service asynchronous operation 'soap_send___ns1__getCountry' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__getCountry(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__getCountryRequest *ns1__getCountryRequest);
    /** Web service asynchronous operation 'soap_recv___ns1__getCountry' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__getCountry(struct soap *soap, struct _ns1__getCountryResponse *ns1__getCountryResponse);

/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/

    /** Web service operation '__ns1__getCountry' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 __ns1__getCountry(struct soap*, struct _ns1__getCountryRequest *ns1__getCountryRequest, struct _ns1__getCountryResponse *ns1__getCountryResponse);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__getCountry(struct soap*);

#endif

/* End of soapStub.h */
